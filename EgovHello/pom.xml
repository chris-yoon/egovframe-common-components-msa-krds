<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.0</version>
        <relativePath/>
    </parent>
    
    <groupId>egovframework.com</groupId>
    <artifactId>EgovHello</artifactId>
    <version>1.0.0</version>
    <name>EgovHello</name>
    
    <properties>
        <java.version>17</java.version>
        <spring-cloud.version>2023.0.0</spring-cloud.version>
        <otel.version>1.31.0</otel.version>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- Prerequisite for observability -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        
        <!-- OpenTelemetry 관련 의존성 -->
        <!-- OpenTelemetry API는 OpenTelemetry의 핵심 인터페이스를 제공합니다. -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
            <version>${otel.version}</version>
        </dependency>
        <!-- OpenTelemetry API의 구현체입니다. 트레이서(tracer), 메트릭 수집기, 컨텍스트 관리 등을 실제로 실행하는 SDK를 제공합니다. -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
            <version>${otel.version}</version>
        </dependency>
        <!-- OpenTelemetry 데이터를 OTLP(OpenTelemetry Protocol) 형식으로 내보내는 exporter입니다. -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
            <version>${otel.version}</version>
        </dependency>
        <!-- Spring Boot 애플리케이션에서 OpenTelemetry를 쉽게 통합하기 위한 스타터 패키지입니다. -->
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-spring-boot-starter</artifactId>
            <version>${otel.version}-alpha</version>
        </dependency>

        <!-- Logback JSON 관련 의존성 -->
        <!-- Logback 로깅 프레임워크에서 로그를 JSON 형식으로 출력할 수 있게 해주는 확장 모듈입니다. -->
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>0.1.5</version>
        </dependency>
        <!-- Logback에서 JSON 로그를 생성할 때 사용되는 Jackson 라이브러리입니다. -->
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>0.1.5</version>
        </dependency>

        <!-- OpenTelemetry 로깅 관련 의존성 -->
        <!-- OpenTelemetry 로깅을 위한 Logback Appender입니다. -->
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-logback-appender-1.0</artifactId>
            <version>${otel.version}-alpha</version>
        </dependency>
    </dependencies>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
