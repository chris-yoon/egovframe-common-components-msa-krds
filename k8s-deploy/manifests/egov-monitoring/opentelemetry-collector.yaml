apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector-collector
  namespace: egov-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector-role
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "nodes/proxy"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector-role-binding
subjects:
- kind: ServiceAccount
  name: otel-collector-collector
  namespace: egov-monitoring
roleRef:
  kind: ClusterRole
  name: otel-collector-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: egov-monitoring
spec:
  mode: deployment
  serviceAccount: otel-collector-collector
  image: otel/opentelemetry-collector-contrib:0.96.0
  podAnnotations:
    sidecar.istio.io/inject: "false"
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      filelog:
        include: [ /var/log/containers/*egov*.log ]
        exclude: [ /var/log/containers/*istio*.log ]
        start_at: beginning
        include_file_path: true
        include_file_name: true
        operators:
          - type: json_parser
            parse_to: attributes
          - type: move
            from: attributes["spring.application.name"]
            to: attributes["service.name"]
          - type: move
            from: attributes["container.name"]
            to: attributes["log.container.name"]
    processors:
      batch:
        timeout: 10s
        send_batch_size: 1024
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      attributes:
        actions:
          - key: service.name
            from_attribute: app
            action: insert
          - key: service.namespace
            from_attribute: namespace
            action: insert
    exporters:
      otlp:
        endpoint: jaeger-collector.egov-monitoring:4317
        tls:
          insecure: true
      loki:
        endpoint: http://loki.egov-monitoring:3100/loki/api/v1/push
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, attributes]
          exporters: [otlp]
        logs:
          receivers: [otlp, filelog]
          processors: [memory_limiter, batch, attributes]
          exporters: [loki]
      telemetry:
        logs:
          level: "debug"
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: egov-monitoring
spec:
  ports:
  - name: grpc-otlp
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: http-otlp
    port: 4318
    protocol: TCP
    targetPort: 4318
  - name: prometheus
    port: 8889
    protocol: TCP
    targetPort: 8889
  selector:
    app.kubernetes.io/name: otel-collector-collector
